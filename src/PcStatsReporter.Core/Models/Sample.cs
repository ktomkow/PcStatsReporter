using System;
using System.Text;

namespace PcStatsReporter.Core.Models
{
    public abstract class Sample : IEquatable<Sample>
    {
        public Guid Id { get; set; }
        public DateTime RegisteredAt { get; set; }

        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.AppendLine("****************************************");
            sb.AppendLine("----------------------------------------");
            sb.AppendLine($"Type: {this.GetType().Name}");
            sb.AppendLine($"Id: {Id}");
            sb.AppendLine($"RegisteredAt: {RegisteredAt}");
            sb.AppendLine("----------------------------------------");

            sb.AppendLine(this.Format());
            
            sb.AppendLine("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^");
            
            return sb.ToString();
        }

        protected abstract string Format();

        // autogenerated
        public bool Equals(Sample other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;
            return Id.Equals(other.Id);
        }

        // autogenerated
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != this.GetType()) return false;
            return Equals((Sample) obj);
        }

        // autogenerated
        public override int GetHashCode()
        {
            return Id.GetHashCode();
        }
    }
}